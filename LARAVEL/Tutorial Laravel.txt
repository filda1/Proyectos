 TUTORIAL DE LARAVEL

INSTALAR LARAVEL
 1. Tener Xamp/ Wamp.......
 2. Instalar Composer (Ojo poner el PHP atulizado, dentro de la instalacion)
 3. En cmd:
     1. Composer
      2 Cambiar direccion www/ httdoc en cmd
         1. c:\Users\meire>cd..
         2. c:\Users>cd..
         3. c:\>cd wamp64\www\
         4. c:\ wamp64\www> composer create-project --prefer-dist laravel/laravel NombreProyecto (ver documentacion)
         5. c:\ wamp64\www>cd NombreProyecto
         6. c:\ wamp64\www\NombreProyecto>php artisan serve (ver documentacion)

  Ver en Localhost:8000 ======================================>Laravel
   OJO: cada vez que quieres usar laravel tienes que corre artisan en cmd (del Paso 1 al 6, menos 4)

ARTISAN
        Cambiar Puerto = php artisan serve --port=901
        Desde una red local acceder con artsan= php artisan serve --host= 192.168.1.x........................
        Hacer un Controlador = php artisan make:controller NombreControlador ( controlar simple)
                                                = php artisan make:controlller NombreControlado --m Modelo (crea metodos get, post , update..........)
       * Base de datos
             1.Crear en mysql BD a mano   (Ojo. laconexion por defecto es de mysql, si queres cambiar de BD, tienees q modificar env y database.php(En config))
             2. Configurar env (Conexion BD)
             3 . 
               ELOQUET
              Migrar tablas (c/migracion es una tabla, que tiene un modelo)
                  crea:
                            Tabla = php artisan make: migration create_nombre_table
                            Tabla1 Y modelo:        php artisan make:model Nombre --migration   (ojo, nombre tiene q se singular. Modelo, Tabla) 
                            Tabla ,Modelo, Factory, controlador =       php artisan make:model Nombre -a  (Hace Todo , Tabla ,modelo, contolador. --a tamabiem puede ser --all)
                            tabla2:       php artisan make:model  Otronombre  -m (es igual a la anterior)
            
                *  php artisan migrate (para guardar todas tablas a mysql) 
                    php artisan migrate:refresh (elimana las tablas BD y las crea de nuevo)
                      php artisan migrate:rollback (elimina todas las tablas)

              Ojo ERROR de Users ,de la tabla que ya existe, cambiar por User o cualquier otro nombre
              Ojo ERROR  42000, por version mysql antigua =============> en AppServiceProvider.php :

                                  use Illuminate\Support\Facades\Schema;
                                        public function boot(){
                                                                                Schema::defaultStringLength(191);
                                        }
              *** NOTA: Otra forma forma, es crear tabla y despues modelo (Documenytacion de laravel)

            CRUD
             php artisan make:model Nombre -a 
              Ver (depues de crear recursos):   php artisan route:list
         
         
                Crear Recurso =======> crea Metodos: Index() (get) , show (get/id) , Create (view para post) , store (guarda el post), edist (view para update), update (guarda el update) y destroy (elimina)
               Route::resource('tasks', 'TaskController'); ===================>controla get, post, delete, update (Ojo , tasks tiene que ser plural y minuscula. PARA LAS VER la todas las rutas como quedan, en cmd: php artisan route:list)

            4. RECUPERAR DATOS DE BD (Get)

                 En controller:
                            Use App;

                            public function ejemplo () {
                             $flights = App\Flight::all();
                                 return view('visra' , compact('flights') );
                           }

                En view:
                            foreach ($flights as $flight) {
                                    echo $flight->name; =======================================> name: campo
                            }
           5. LOGIN 
                php artisan make:auth (hace todo , crear un login, y home y pone link al principio de pagina de laravel)
    
           6. Consumir API  con GUZZLE
                  1. Instalar,   composer require guzzlehttp/guzzle
                  2. en web.php
                               
                                     use GuzzleHttp\Client;
                     *     Route::get('/', function () {
                                     

                                               $client = new Client([
                                                                                      
                                                                                     'base_uri' => 'http://jsonplaceholder.typecode.com',                                                                             
                                                                                     'timeout'  => 2.0,
                                           ]);

                                            $response = $client->request('GET', 'posts');   ==================>http://jsonplaceholder.typecode.com/posts (Si es, GET/id ====> post/{$id})
                                            return view('vista' compact('$post'));
                               });


                            EN View:
                                   foreach ($post as $item) {
                                    echo $item->title; =======================================> name: campo
                            }
  
           DEMAS metodos post, update, delete ======> ir a documentacion de GUZZLE (http://docs.guzzlephp.org/en/stable/quickstart.html#redirects)
           Manera mejor hecha = https://www.youtube.com/watch?v=13i6V3r3K34 = Aprendible



            7.    CREAR RESTFULL API
                         php artisan make:resource Nombre
                Crear Recurso =======> crea Metodos: Index() (get) , show (get/id) , , store (guarda el post), , update (guarda el update) y destroy (elimina)
               Route::api.resource('tasks', 'TaskController');   ===================> va en la pagina de api.php

                  https://github.com/andreriveravega/laravel-crud-ApiRest  =  https://www.youtube.com/watch?v=m7MaC6uute4
                  https://github.com/Camilafernandes/apiLaravel/blob/master/app/Http/Controllers/UsersController.php
-------------------------------------------------------------------------------------------------------------
                $response : es json
                        json_decode = convierte a arrrays(strings)
                        json_encode = convierte a json
                foreach (json_decode($response) as $area)
                    {
                              print_r($area); // this is your area from json response
                     }

              8. MANEJO DE FECHAS ( con Carbon , ya esta integrado)
                             https://carbon.nesbot.com/docs/

                 Ej:   <td>{{$task->fecha->year}}</td>


  PANTILLAS DE THEMES DE BOOSTRAP ADMIN
            1. En Public: pegar carpetas Boostrap, dist, fonts,plugins
             2. Luego cambiar formato de archivos  Home.php   Ej: Home.php
      